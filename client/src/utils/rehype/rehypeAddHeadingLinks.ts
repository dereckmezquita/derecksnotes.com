import { Node } from 'unist';

// add links to headings using the id generated by rehype-slug
// <h2 id="some-id">Some id</h2>
// we want the result to be as
// <h1 id="some-id">
//     <a aria-hidden="true" tabindex="-1" href="#some-id"><span># </span>Lorem ipsum</a>
// </h1>
export default function rehypeAddHeadingLinks() {
    return (tree: Node) => {

        // Step 1: Define addHeadingLinks function
        const addHeadingLinks = (node: Node) => {

            // Check if the current node is a heading element
            if (node.type === 'element' && ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes((node as any).tagName)) {
                const id = (node as any).properties.id;

                // if the id is table-of-contents then skip this one
                if (id === 'table-of-contents') return;

                // Create link element
                const link = {
                    type: 'element',
                    tagName: 'a',
                    properties: {
                        ariaHidden: 'true',
                        tabIndex: '-1',
                        href: `#${id}`,
                        style: `
                            text-decoration: none;
                            font-size: 0.9em;
                            opacity: 0;
                            transition: opacity 0.3s;
                        `,
                        className: ['icon', 'icon-link'],
                        onMouseOver: 'this.style.opacity = 1',  // make it visible on hover
                        onMouseOut: 'this.style.opacity = 0',
                    },
                    children: [{
                        type: 'element',
                        tagName: 'img',
                        properties: {
                            src: '/site-images/icons/link-icon.png', // base64 encoded green pushpin image
                            alt: `Link to heading ${id}`,
                            style: `
                                height: 0.8em;
                                padding-left: 0.2em;
                            `,
                        },
                    }],
                };

                // Append link to the heading
                (node as any).children.push(link);
            }

            if ('children' in node) {
                (node.children as Node[]).forEach(addHeadingLinks);
            }
        };

        // Step 2: Call addHeadingLinks function
        addHeadingLinks(tree);
    };
}