import { Node } from 'unist';

// a simple functions simply to reliably add css styles to the table of contents generated by remark-toc
// we want to style the first ul element with a class of "table-of-contents"
// <h2 id="table-of-contents">Table of contents</h2>
// <ul>
//     <li>
//         <p><a href="#test1">test1</a></p>
//     </li>
//     <li>
//         <p><a href="#test">test</a></p>
//     <ul>
//         <li>
//             <p><a href="#another-level">another level</a></p>
//             <ul>
//                 <li><a href="#one-more">one more</a></li>
//             </ul>
//         </li>
//     </ul>
//     </li>
// </ul>
// after creating remarkTocCollapse we now have this structure:
// <details open="">
//     <summary>

//     <h3 id="table-of-contents" style="display: inline-block; margin: 0px; padding: 0px; padding-bottom: 15px;">
//         Table of Contents
//     </h3>
                    
//     </summary>
//     <ul>
//         <li>
//             <p><a href="#what-is-a-cell">What is a cell?</a></p>
//             <ul>
//                 <li>
//                     <a href="#cell-theory">Cell theory</a>
//                 </li>
//             </ul>
//         </li>
//     </ul>
// </details>
export default function rehypeStyleToc() {
    return (tree: Node) => {
        // Step 1: Initialize tableOfContentsNode
        let tableOfContentsNode: Node | null = null;

        let tableOfContentsHeaderFound = false;

        // Step 2: Define findTableOfContentsNode function
        const findTableOfContentsNode = (node: Node) => {
            if (tableOfContentsNode) return;

            // Check if the current node is an h2 element with id="table-of-contents"
            // and check that the value of the h3 is "Table of contents"
            // {
            //     type: 'root',
            //     children: [
            //       { type: 'raw', value: '<details>' },
            //       { type: 'text', value: '\n' },
            //       { type: 'raw', value: '<summary>' },
            //       { type: 'text', value: '\n' },
            //       {
            //         type: 'raw',
            //         value: '\n' +
            //           '                        <h3 id="table-of-contents" style="display: inline-block; margin: 0px; padding: 0px; padding-bottom: 15px;">\n' +
            //           '                            Table of Contents\n' +
            //           '                        </h3>\n' +
            //           '                    '
            //       },
            //       { type: 'text', value: '\n' },
            console.log(node);
            if (!tableOfContentsHeaderFound && node.type === 'element' && (node as any).properties.id === 'table-of-contents') {
                tableOfContentsHeaderFound = true;
            } else if (tableOfContentsHeaderFound && node.type === 'element' && (node as any).tagName === 'ul') {
                tableOfContentsNode = node;
                console.log(`Found table of contents node: ${JSON.stringify(tableOfContentsNode)}`);
                return;
            }

            if ('children' in node) {
                (node.children as Node[]).forEach(findTableOfContentsNode);
            }
        };

        // Step 3: Call findTableOfContentsNode function
        findTableOfContentsNode(tree);

        // Step 4: Style tableOfContentsNode
        if (tableOfContentsNode) {
            // recursively go through children and add styles
            const addStyles = (node: Node) => {
                if (node.type === 'element' && (node as any).tagName === 'ul') {
                    (node as any).properties = {
                        style: `
                            line-height: 5px;
                            margin-left: 0.75rem;
                            padding-left: 0.75rem;
                            background-color: red;
                        `
                    };
                }

                if ('children' in node) {
                    (node.children as Node[]).forEach(addStyles);
                }
            }

            addStyles(tableOfContentsNode);
        }
    };
}