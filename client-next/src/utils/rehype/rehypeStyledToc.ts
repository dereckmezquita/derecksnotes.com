import { Node } from 'unist';

// a simple functions simply to reliably add css styles to the table of contents generated by remark-toc
// we want to style the first ul element with a class of "table-of-contents"
// <h2 id="table-of-contents">Table of contents</h2>
// <ul>
//     <li>
//         <p><a href="#test1">test1</a></p>
//     </li>
//     <li>
//         <p><a href="#test">test</a></p>
//     <ul>
//         <li>
//             <p><a href="#another-level">another level</a></p>
//             <ul>
//                 <li><a href="#one-more">one more</a></li>
//             </ul>
//         </li>
//     </ul>
//     </li>
// </ul>
export default function rehypeStyleToc() {
    return (tree: Node) => {
        // Step 1: Initialize tableOfContentsNode
        let tableOfContentsNode: Node | null = null;

        let tableOfContentsHeaderFound = false;

        // Step 2: Define findTableOfContentsNode function
        const findTableOfContentsNode = (node: Node) => {
            if (tableOfContentsNode) return;

            // Check if the current node is an h2 element with id="table-of-contents"
            if (node.type === 'element' && (node as any).tagName === 'h2') {
                tableOfContentsHeaderFound = true;
            } else if (tableOfContentsHeaderFound && node.type === 'element' && (node as any).tagName === 'ul') {
                tableOfContentsNode = node;
                return;
            }

            if ('children' in node) {
                (node.children as Node[]).forEach(findTableOfContentsNode);
            }
        };

        // Step 3: Call findTableOfContentsNode function
        findTableOfContentsNode(tree);


        // Step 4: Style tableOfContentsNode
        if (tableOfContentsNode) {
            // recursively go through children and add styles
            const addStyles = (node: Node) => {
                if (node.type === 'element' && (node as any).tagName === 'ul') {
                    (node as any).properties = {
                        style: `
                            line-height: 5px;
                            margin-left: 0.75rem;
                            padding-left: 0.75rem;
                        `
                    };
                }

                if ('children' in node) {
                    (node.children as Node[]).forEach(addStyles);
                }
            }

            addStyles(tableOfContentsNode);
        }
    };
}