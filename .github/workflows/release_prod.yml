name: Release Prod Docker image to Linode

on:
  release:
    types: [published]
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: dereckmezquita/linode_capguru-webapp

      - name: Create .env file
        run: |
          echo BUILD_ENV=PROD > .env
          echo NEXT_PUBLIC_BUILD_ENV=PROD >> .env
          echo NEXT_PUBLIC_API_URL=https://mezquita.dev/api >> .env
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }},dereckmezquita/linode_capguru-webapp:latest_prod
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_ENV=PROD
  deploy_to_linode:
    name: Deploy docker-compose.yml to Linode
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to Linode
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          source: './docker-compose.yml'
          target: '/root/docker-compose-capguru-webapp/'

      - name: Execute remote Docker Compose command
        uses: appleboy/ssh-action@v1.0.3
        env:
          CONTAINER_NAME: 'prod_linode_capguru-webapp'
          HOST_PORT: '3000'
          IMAGE_NAME: 'dereckmezquita/linode_capguru-webapp:latest_prod'
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          envs: CONTAINER_NAME,HOST_PORT,IMAGE_NAME
          script: |
            cd /root/docker-compose-capguru-webapp/
            docker compose -f docker-compose.yml -p prod pull
            docker compose -f docker-compose.yml -p prod down
            docker container prune -f
            docker image prune -f
            docker rm -f prod_linode_capguru-webapp
            docker compose -f docker-compose.yml -p prod up -d
